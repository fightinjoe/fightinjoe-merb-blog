Gem::Specification.new do |s|
  s.name = %q{datamapper}
  s.version = "0.3.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Sam Smoot"]
  s.autorequire = %q{data_mapper}
  s.date = %q{2008-03-17}
  s.description = %q{Faster, Better, Simpler.}
  s.email = %q{ssmoot@gmail.com}
  s.extra_rdoc_files = ["README", "FAQ", "QUICKLINKS", "CHANGELOG", "MIT-LICENSE", "environment.rb", "example.rb", "performance.rb", "profile_data_mapper.rb", "rakefile.rb", "lib/data_mapper/adapters/abstract_adapter.rb", "lib/data_mapper/adapters/data_object_adapter.rb", "lib/data_mapper/adapters/mysql_adapter.rb", "lib/data_mapper/adapters/postgresql_adapter.rb", "lib/data_mapper/adapters/sql/coersion.rb", "lib/data_mapper/adapters/sql/commands/load_command.rb", "lib/data_mapper/adapters/sql/mappings/associations_set.rb", "lib/data_mapper/adapters/sql/mappings/column.rb", "lib/data_mapper/adapters/sql/mappings/conditions.rb", "lib/data_mapper/adapters/sql/mappings/schema.rb", "lib/data_mapper/adapters/sql/mappings/table.rb", "lib/data_mapper/adapters/sql/quoting.rb", "lib/data_mapper/adapters/sqlite3_adapter.rb", "lib/data_mapper/associations/belongs_to_association.rb", "lib/data_mapper/associations/has_and_belongs_to_many_association.rb", "lib/data_mapper/associations/has_many_association.rb", "lib/data_mapper/associations/has_n_association.rb", "lib/data_mapper/associations/reference.rb", "lib/data_mapper/associations.rb", "lib/data_mapper/attributes.rb", "lib/data_mapper/auto_migrations.rb", "lib/data_mapper/base.rb", "lib/data_mapper/callbacks.rb", "lib/data_mapper/context.rb", "lib/data_mapper/database.rb", "lib/data_mapper/dependency_queue.rb", "lib/data_mapper/embedded_value.rb", "lib/data_mapper/identity_map.rb", "lib/data_mapper/is/tree.rb", "lib/data_mapper/migration.rb", "lib/data_mapper/persistence.rb", "lib/data_mapper/property.rb", "lib/data_mapper/query.rb", "lib/data_mapper/support/blank.rb", "lib/data_mapper/support/connection_pool.rb", "lib/data_mapper/support/enumerable.rb", "lib/data_mapper/support/errors.rb", "lib/data_mapper/support/inflector.rb", "lib/data_mapper/support/object.rb", "lib/data_mapper/support/serialization.rb", "lib/data_mapper/support/silence.rb", "lib/data_mapper/support/string.rb", "lib/data_mapper/support/struct.rb", "lib/data_mapper/support/symbol.rb", "lib/data_mapper/support/typed_set.rb", "lib/data_mapper/types/base.rb", "lib/data_mapper/types/string.rb", "lib/data_mapper/validatable_extensions/errors.rb", "lib/data_mapper/validatable_extensions/macros.rb", "lib/data_mapper/validatable_extensions/validatable_instance_methods.rb", "lib/data_mapper/validatable_extensions/validation_base.rb", "lib/data_mapper/validatable_extensions/validations/formats/email.rb", "lib/data_mapper/validatable_extensions/validations/validates_acceptance_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_confirmation_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_each.rb", "lib/data_mapper/validatable_extensions/validations/validates_format_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_length_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_numericality_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_presence_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_true_for.rb", "lib/data_mapper/validatable_extensions/validations/validates_uniqueness_of.rb", "lib/data_mapper/validations/number_validator.rb", "lib/data_mapper/validations/string_validator.rb", "lib/data_mapper/validations/validator.rb", "lib/data_mapper/validations.rb", "lib/data_mapper.rb", "tasks/fixtures.rb", "plugins/can_has_sphinx/init.rb", "plugins/can_has_sphinx/install.rb", "plugins/can_has_sphinx/lib/acts_as_sphinx.rb", "plugins/can_has_sphinx/lib/sphinx.rb", "plugins/can_has_sphinx/LICENSE", "plugins/can_has_sphinx/Rakefile", "plugins/can_has_sphinx/README", "plugins/can_has_sphinx/REVISION", "plugins/can_has_sphinx/scripts/sphinx.sh", "plugins/can_has_sphinx/tasks/acts_as_sphinx_tasks.rake"]
  s.files = ["README", "FAQ", "QUICKLINKS", "CHANGELOG", "MIT-LICENSE", "environment.rb", "example.rb", "performance.rb", "profile_data_mapper.rb", "rakefile.rb", "lib/data_mapper/adapters/abstract_adapter.rb", "lib/data_mapper/adapters/data_object_adapter.rb", "lib/data_mapper/adapters/mysql_adapter.rb", "lib/data_mapper/adapters/postgresql_adapter.rb", "lib/data_mapper/adapters/sql/coersion.rb", "lib/data_mapper/adapters/sql/commands/load_command.rb", "lib/data_mapper/adapters/sql/mappings/associations_set.rb", "lib/data_mapper/adapters/sql/mappings/column.rb", "lib/data_mapper/adapters/sql/mappings/conditions.rb", "lib/data_mapper/adapters/sql/mappings/schema.rb", "lib/data_mapper/adapters/sql/mappings/table.rb", "lib/data_mapper/adapters/sql/quoting.rb", "lib/data_mapper/adapters/sqlite3_adapter.rb", "lib/data_mapper/associations/belongs_to_association.rb", "lib/data_mapper/associations/has_and_belongs_to_many_association.rb", "lib/data_mapper/associations/has_many_association.rb", "lib/data_mapper/associations/has_n_association.rb", "lib/data_mapper/associations/reference.rb", "lib/data_mapper/associations.rb", "lib/data_mapper/attributes.rb", "lib/data_mapper/auto_migrations.rb", "lib/data_mapper/base.rb", "lib/data_mapper/callbacks.rb", "lib/data_mapper/context.rb", "lib/data_mapper/database.rb", "lib/data_mapper/dependency_queue.rb", "lib/data_mapper/embedded_value.rb", "lib/data_mapper/identity_map.rb", "lib/data_mapper/is/tree.rb", "lib/data_mapper/migration.rb", "lib/data_mapper/persistence.rb", "lib/data_mapper/property.rb", "lib/data_mapper/query.rb", "lib/data_mapper/support/blank.rb", "lib/data_mapper/support/connection_pool.rb", "lib/data_mapper/support/enumerable.rb", "lib/data_mapper/support/errors.rb", "lib/data_mapper/support/inflector.rb", "lib/data_mapper/support/object.rb", "lib/data_mapper/support/serialization.rb", "lib/data_mapper/support/silence.rb", "lib/data_mapper/support/string.rb", "lib/data_mapper/support/struct.rb", "lib/data_mapper/support/symbol.rb", "lib/data_mapper/support/typed_set.rb", "lib/data_mapper/types/base.rb", "lib/data_mapper/types/string.rb", "lib/data_mapper/validatable_extensions/errors.rb", "lib/data_mapper/validatable_extensions/macros.rb", "lib/data_mapper/validatable_extensions/validatable_instance_methods.rb", "lib/data_mapper/validatable_extensions/validation_base.rb", "lib/data_mapper/validatable_extensions/validations/formats/email.rb", "lib/data_mapper/validatable_extensions/validations/validates_acceptance_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_confirmation_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_each.rb", "lib/data_mapper/validatable_extensions/validations/validates_format_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_length_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_numericality_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_presence_of.rb", "lib/data_mapper/validatable_extensions/validations/validates_true_for.rb", "lib/data_mapper/validatable_extensions/validations/validates_uniqueness_of.rb", "lib/data_mapper/validations/number_validator.rb", "lib/data_mapper/validations/string_validator.rb", "lib/data_mapper/validations/validator.rb", "lib/data_mapper/validations.rb", "lib/data_mapper.rb", "spec/acts_as_tree_spec.rb", "spec/adapters/data_object_adapter_spec.rb", "spec/associations/belongs_to_association_spec.rb", "spec/associations/has_and_belongs_to_many_association_spec.rb", "spec/associations/has_many_association_spec.rb", "spec/attributes_spec.rb", "spec/auto_migrations_spec.rb", "spec/callbacks_spec.rb", "spec/can_has_sphinx.rb", "spec/coersion_spec.rb", "spec/column_spec.rb", "spec/count_command_spec.rb", "spec/database_spec.rb", "spec/dataobjects_spec.rb", "spec/delete_command_spec.rb", "spec/dependency_spec.rb", "spec/embedded_value_spec.rb", "spec/is_a_tree_spec.rb", "spec/legacy_spec.rb", "spec/load_command_spec.rb", "spec/magic_columns_spec.rb", "spec/migration_spec.rb", "spec/mock_adapter.rb", "spec/models/animal.rb", "spec/models/candidate.rb", "spec/models/career.rb", "spec/models/chain.rb", "spec/models/comment.rb", "spec/models/exhibit.rb", "spec/models/fence.rb", "spec/models/fruit.rb", "spec/models/job.rb", "spec/models/person.rb", "spec/models/post.rb", "spec/models/project.rb", "spec/models/sales_person.rb", "spec/models/section.rb", "spec/models/serializer.rb", "spec/models/task.rb", "spec/models/tomato.rb", "spec/models/user.rb", "spec/models/zoo.rb", "spec/natural_key_spec.rb", "spec/paranoia_spec.rb", "spec/persistence_spec.rb", "spec/postgres_spec.rb", "spec/property_spec.rb", "spec/query_spec.rb", "spec/save_command_spec.rb", "spec/schema_spec.rb", "spec/serialize_spec.rb", "spec/single_table_inheritance_spec.rb", "spec/spec_helper.rb", "spec/support/blank_spec.rb", "spec/support/inflector_spec.rb", "spec/support/object_spec.rb", "spec/support/serialization_spec.rb", "spec/support/silence_spec.rb", "spec/support/string_spec.rb", "spec/support/struct_spec.rb", "spec/support/typed_set_spec.rb", "spec/symbolic_operators_spec.rb", "spec/table_spec.rb", "spec/types/string.rb", "spec/validates_confirmation_of_spec.rb", "spec/validates_format_of_spec.rb", "spec/validates_length_of_spec.rb", "spec/validates_uniqueness_of_spec.rb", "spec/validations/number_validator.rb", "spec/validations/string_validator.rb", "spec/validations_spec.rb", "spec/fixtures/animals.yaml", "spec/fixtures/animals_exhibits.yaml", "spec/fixtures/careers.yaml", "spec/fixtures/comments.yaml", "spec/fixtures/exhibits.yaml", "spec/fixtures/fruit.yaml", "spec/fixtures/people.yaml", "spec/fixtures/posts.yaml", "spec/fixtures/projects.yaml", "spec/fixtures/sections.yaml", "spec/fixtures/serializers.yaml", "spec/fixtures/tasks.yaml", "spec/fixtures/tasks_tasks.yaml", "spec/fixtures/tomatoes.yaml", "spec/fixtures/users.yaml", "spec/fixtures/zoos.yaml", "tasks/fixtures.rb", "plugins/can_has_sphinx", "plugins/can_has_sphinx/init.rb", "plugins/can_has_sphinx/install.rb", "plugins/can_has_sphinx/lib", "plugins/can_has_sphinx/lib/acts_as_sphinx.rb", "plugins/can_has_sphinx/lib/sphinx.rb", "plugins/can_has_sphinx/LICENSE", "plugins/can_has_sphinx/Rakefile", "plugins/can_has_sphinx/README", "plugins/can_has_sphinx/REVISION", "plugins/can_has_sphinx/scripts", "plugins/can_has_sphinx/scripts/sphinx.sh", "plugins/can_has_sphinx/tasks", "plugins/can_has_sphinx/tasks/acts_as_sphinx_tasks.rake"]
  s.has_rdoc = true
  s.homepage = %q{http://datamapper.org}
  s.rdoc_options = ["--line-numbers", "--inline-source", "--main", "README"]
  s.require_paths = ["lib"]
  s.requirements = ["none"]
  s.rubyforge_project = %q{datamapper}
  s.rubygems_version = %q{1.2.0}
  s.summary = %q{An Object/Relational Mapper for Ruby}

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 2

    if current_version >= 3 then
      s.add_runtime_dependency(%q<fastthread>, [">= 0"])
      s.add_runtime_dependency(%q<json>, [">= 0"])
      s.add_runtime_dependency(%q<rspec>, [">= 0"])
      s.add_runtime_dependency(%q<validatable>, [">= 0"])
    else
      s.add_dependency(%q<fastthread>, [">= 0"])
      s.add_dependency(%q<json>, [">= 0"])
      s.add_dependency(%q<rspec>, [">= 0"])
      s.add_dependency(%q<validatable>, [">= 0"])
    end
  else
    s.add_dependency(%q<fastthread>, [">= 0"])
    s.add_dependency(%q<json>, [">= 0"])
    s.add_dependency(%q<rspec>, [">= 0"])
    s.add_dependency(%q<validatable>, [">= 0"])
  end
end
